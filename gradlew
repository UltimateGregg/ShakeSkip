#!/bin/sh

##############################################################################
##
##  Gradle start up script for POSIX generated by Gradle.
##
##  Important for running: ensure this file has UNIX line endings (LF).
##
##############################################################################

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
app_path=$(dirname "$0")

# shellcheck disable=SC2039
if command -v readlink >/dev/null 2>&1; then
    script_path=$(readlink -f "$0" 2>/dev/null)
else
    script_path="$0"
fi

if [ -n "$script_path" ]; then
    app_path=$(dirname "$script_path")
fi

APP_HOME=$(cd "$app_path" && pwd)

# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS="-Xmx64m -Xms64m"

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD="maximum"

warn () {
    echo "$*"
}

_die () {
    echo
    echo "$*"
    echo
    exit 1
}

# OS specific support (must be 'true' or 'false').
darwin=false
msys=false
case "$(uname)" in
  CYGWIN* )
    cygwin=true
    ;;
  Darwin* )
    darwin=true
    ;;
  MINGW* )
    msys=true
    ;;
  MSYS* )
    msys=true
    ;;
  * )
    ;;
esac

CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD="$JAVA_HOME/jre/sh/java"
    else
        JAVACMD="$JAVA_HOME/bin/java"
    fi
    if [ ! -x "$JAVACMD" ] ; then
        _die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME"
    fi
else
    JAVACMD="java"
fi

if [ ! -x "$JAVACMD" ] ; then
    _die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH."
fi

if [ "$darwin" = "true" ] ; then
    # macOS Finder: when launching jar files it adds a -psn_... argument. We strip it.
    case "$*" in
    -psn_*)
        shift
        ;;
    esac
fi

# Escape application args
save () {
    for i do
        printf '%s\n' "$i" | sed "s/'/'\\''/g"
    done
}
APP_ARGS=$(save "$@")

# Collect JVM options from environment variables
JAVA_OPTS=${JAVA_OPTS:-}
GRADLE_OPTS=${GRADLE_OPTS:-}

# For Cygwin or MSYS, switch paths to Windows format before running java
if [ "$cygwin" = "true" -o "$msys" = "true" ] ; then
    APP_HOME=$(cygpath --path --mixed "$APP_HOME")
    CLASSPATH=$(cygpath --path --mixed "$CLASSPATH")
    JAVACMD=$(cygpath --unix "$JAVACMD")

    # We build the pattern for arguments to be converted via cygpath
    ROOTDIRSRAW=$(find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null)
    SEP=""
    for dir in $ROOTDIRSRAW ; do
        ROOTDIRS="$ROOTDIRS$SEP$dir"
        SEP="|"
    done
    OURCYGPATTERN="(^($ROOTDIRS))"
    # Convert arguments that match our pattern
    i=0
    for arg in "$@" ; do
        CHECK=$(echo "$arg" | egrep -c "$OURCYGPATTERN" -)
        CHECK2=$(echo "$arg" | egrep -c "^-[^=]*[@/].*")
        if [ $CHECK -ne 0 ] || [ $CHECK2 -ne 0 ] ; then
            eval "arg$i=$(cygpath --path --ignore --mixed "$arg")"
        else
            eval "arg$i='$arg'"
        fi
        i=$((i+1))
    done
    case $i in
        0) set -- ;;
        1) set -- "$arg0" ;;
        2) set -- "$arg0" "$arg1" ;;
        3) set -- "$arg0" "$arg1" "$arg2" ;;
        4) set -- "$arg0" "$arg1" "$arg2" "$arg3" ;;
        5) set -- "$arg0" "$arg1" "$arg2" "$arg3" "$arg4" ;;
        6) set -- "$arg0" "$arg1" "$arg2" "$arg3" "$arg4" "$arg5" ;;
        7) set -- "$arg0" "$arg1" "$arg2" "$arg3" "$arg4" "$arg5" "$arg6" ;;
        8) set -- "$arg0" "$arg1" "$arg2" "$arg3" "$arg4" "$arg5" "$arg6" "$arg7" ;;
        9) set -- "$arg0" "$arg1" "$arg2" "$arg3" "$arg4" "$arg5" "$arg6" "$arg7" "$arg8" ;;
    esac
fi

exec "$JAVACMD" $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"